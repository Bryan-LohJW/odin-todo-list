(()=>{"use strict";var t={d:(e,o)=>{for(var d in o)t.o(o,d)&&!t.o(e,d)&&Object.defineProperty(e,d,{enumerable:!0,get:o[d]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{IK:()=>d,rk:()=>i,Xd:()=>s});class o{constructor(t,e,o,d,i="black",s=!1){this.title=t,this.description=e,this.dueDate=o,this.priority=d,this.color=i,this.check=s}}class d{constructor(t,e=[]){this.name=t,this.todoList=e}}const i=(t,e)=>{e.id=t.todoList.length,t.todoList.push(e)},s=(t,e)=>{for(let o=0;o<t.todoList.length;o++)e===t.todoList[o].title&&t.todoList.splice(o,1);for(let e=0;e<t.todoList.length;e++)t.todoList[e].id=e};let n=new o("title","desc","date","prio"),c=new o("title1","desc","date","prio"),l=new o("title2","desc","date","prio"),r=new o("title3","desc","date","prio"),a=new d("Hello");i(a,n),i(a,c),i(a,l),i(a,r),(0,e.addProject)(a),s(a,"title2"),console.log(a.todoList[0]),console.log(a.todoList[1]),console.log(a.todoList[2]),console.log(a.todoList[3]),(()=>{const t=document.querySelector("body"),e=document.createElement("div");e.setAttribute("id","content");const o=document.createElement("div");o.setAttribute("id","project-holder");const d=document.createElement("div");d.setAttribute("id","todo-holder"),e.appendChild(o),e.appendChild(d),t.appendChild(e)})(),(()=>{const t=document.querySelector("#project-holder");for(let o=0;o<e.projectList.length;o++){const d=document.createElement("div");d.classList.add("project");const i=document.createElement("h2");i.classList.add("project-name"),i.innerHTML=e.projectList[o].name;const s=document.createElement("p");s.classList.add("num-of-todos"),s.innerHTML=e.projectList[o].todoList.length,d.appendChild(i),d.appendChild(s),t.appendChild(d)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,