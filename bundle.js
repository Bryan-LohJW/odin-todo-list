(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>d});var o=n(537),i=n.n(o),r=n(645),c=n.n(r)()(i());c.push([e.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ....................................................................... */\n\n:root {\n    \n}\n\n#content {\n    display: grid;\n    grid-template-columns: 400px 1fr;\n\n    padding: 1rem;\n}\n\n#project-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 2rem;\n}\n\n.project {\n    display: flex;\n    justify-content: space-between;\n\n    padding: 0rem 2rem;\n}\n\n.project-name,\n.project-del {\n    font-size: 3rem;\n}\n\n#add-project {\n    text-align: center;\n    font-size: 3rem;\n}\n\n#todo-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 1.5rem;\n}\n\n.todo,\n#add-todo {\n    display: flex;\n    justify-content: space-evenly;\n\n    font-size: 2rem;\n}\n\ninput[type = 'checkbox'] {\n    height: 2rem;\n    width: 2rem;\n}\n\n.background {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n\n    background-color: black;\n    opacity: 0.8;\n}\n\n.add-interface {\n    width:fit-content;\n    height: fit-content;\n\n    background-color: white;\n    padding: 5rem;\n}\n\n.add-interface > form > button {\n    height: 3rem;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;AAEA,4EAA4E;;AAE5E;;AAEA;;AAEA;IACI,aAAa;IACb,gCAAgC;;IAEhC,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8BAA8B;;IAE9B,kBAAkB;AACtB;;AAEA;;IAEI,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,WAAW;AACf;;AAEA;;IAEI,aAAa;IACb,6BAA6B;;IAE7B,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,YAAY;IACZ,aAAa;IACb,eAAe;;IAEf,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;;IAEnB,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ....................................................................... */\n\n:root {\n    \n}\n\n#content {\n    display: grid;\n    grid-template-columns: 400px 1fr;\n\n    padding: 1rem;\n}\n\n#project-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 2rem;\n}\n\n.project {\n    display: flex;\n    justify-content: space-between;\n\n    padding: 0rem 2rem;\n}\n\n.project-name,\n.project-del {\n    font-size: 3rem;\n}\n\n#add-project {\n    text-align: center;\n    font-size: 3rem;\n}\n\n#todo-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 1.5rem;\n}\n\n.todo,\n#add-todo {\n    display: flex;\n    justify-content: space-evenly;\n\n    font-size: 2rem;\n}\n\ninput[type = 'checkbox'] {\n    height: 2rem;\n    width: 2rem;\n}\n\n.background {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n\n    background-color: black;\n    opacity: 0.8;\n}\n\n.add-interface {\n    width:fit-content;\n    height: fit-content;\n\n    background-color: white;\n    padding: 5rem;\n}\n\n.add-interface > form > button {\n    height: 3rem;\n}"],sourceRoot:""}]);const d=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var d=0;d<this.length;d++){var a=this[d][0];null!=a&&(c[a]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&c[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */"),c=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(c).concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var r={},c=[],d=0;d<e.length;d++){var a=e[d],s=o.base?a[0]+o.base:a[0],l=r[s]||0,p="".concat(s," ").concat(l);r[s]=l+1;var u=n(p),A={css:a[1],media:a[2],sourceMap:a[3],supports:a[4],layer:a[5]};if(-1!==u)t[u].references++,t[u].updater(A);else{var m=i(A,o);o.byIndex=d,t.splice(d,0,{identifier:p,updater:m,references:1})}c.push(p)}return c}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var c=0;c<r.length;c++){var d=n(r[c]);t[d].references--}for(var a=o(e,i),s=0;s<r.length;s++){var l=n(r[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}r=a}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return e[o](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var o={};(()=>{n.d(o,{d:()=>w});class e{constructor(e,t,n,o,i="black",r=!1){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.color=i,this.check=r}}class t{constructor(e,t=[]){this.name=e,this.todoList=t}}const i=(e,t)=>{t.id=e.todoList.length,e.todoList.push(t)},r=e=>{const t=document.querySelector("#project-holder");for(;t.firstChild;)t.removeChild(t.firstChild);for(let n=0;n<e.projectList.length;n++){const o=document.createElement("div");o.classList.add("project");const i=document.createElement("h2");i.classList.add("project-name"),i.innerHTML=`${e.projectList[n].name} - (${e.projectList[n].todoList.length})`;const r=document.createElement("div");r.classList.add("project-del"),r.innerHTML="(X)",o.appendChild(i),o.appendChild(r),t.appendChild(o),i.addEventListener("click",(function(){c(e.projectList[n])}))}const n=document.createElement("div");n.setAttribute("id","add-project"),n.innerHTML="(+)",t.appendChild(n),n.addEventListener("click",(function(){d()}))},c=e=>{const t=document.querySelector("#todo-holder");for(;t.firstChild;)t.removeChild(t.firstChild);for(let n=0;n<e.todoList.length;n++){const o=document.createElement("div");o.classList.add("todo");const i=document.createElement("input");i.classList.add("check"),i.setAttribute("type","checkbox");const r=document.createElement("p");r.classList.add("title"),r.innerHTML=e.todoList[n].title;const c=document.createElement("p");c.classList.add("description"),c.innerHTML=e.todoList[n].description;const d=document.createElement("p");d.classList.add("date"),d.innerHTML=e.todoList[n].dueDate;const a=document.createElement("p");a.classList.add("priority"),a.innerHTML=e.todoList[n].priority;const s=document.createElement("div");s.classList.add("todo-edit"),s.innerHTML="Edit",o.appendChild(i),o.appendChild(r),o.appendChild(c),o.appendChild(d),o.appendChild(a),o.appendChild(s),t.appendChild(o)}const n=document.createElement("div");n.setAttribute("id","add-todo"),n.innerHTML="(+)",n.addEventListener("click",(function(){a(e)})),t.appendChild(n)},d=()=>{const e=document.querySelector("body"),n=document.createElement("div");n.classList.add("background"),n.addEventListener("click",(function(){e.removeChild(n)}));const o=document.createElement("div");o.setAttribute("onclick","event.stopPropagation()"),o.classList.add("add-interface");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("placeholder","My New Project"),i.classList.add("project-name");const c=document.createElement("button");c.setAttribute("type","submit"),c.innerHTML="Create",c.addEventListener("click",(function(){(e=>{const n=document.querySelector(".project-name").value,o=new t(n);e.pushProject(o);const i=document.querySelector(".background");document.querySelector("body").removeChild(i),r(e)})(w)})),o.appendChild(i),o.appendChild(c),n.appendChild(o),e.insertBefore(n,e.firstChild)},a=t=>{const n=document.querySelector("body"),o=document.createElement("div");o.classList.add("background"),o.addEventListener("click",(function(){n.removeChild(o)}));const r=document.createElement("div");r.setAttribute("onclick","event.stopPropagation()"),r.classList.add("add-interface");const d=document.createElement("input");d.setAttribute("type","text"),d.setAttribute("placeholder","Title"),d.classList.add("todo-title-input");const a=document.createElement("input");a.setAttribute("type","text"),a.setAttribute("placeholder","Description"),a.classList.add("todo-description-input");const s=document.createElement("input");s.classList.add("todo-date-input"),s.setAttribute("type","date");const l=document.createElement("select"),p=document.createElement("option");p.setAttribute("value","Low"),p.innerHTML="Low";const u=document.createElement("option");u.setAttribute("value","Medium"),u.innerHTML="Medium";const A=document.createElement("option");A.setAttribute("value","High"),A.innerHTML="High",l.appendChild(p),l.appendChild(u),l.appendChild(A),l.classList.add("todo-priority-input");const m=document.createElement("button");m.setAttribute("type","submit"),m.innerHTML="Add",m.addEventListener("click",(function(){(t=>{const n=document.querySelector(".todo-title-input").value,o=document.querySelector(".todo-description-input").value,r=document.querySelector(".todo-date-input").value,d=document.querySelector(".todo-priority-input").value,a=new e(n,o,r,d);i(t,a);const s=document.querySelector(".background");document.querySelector("body").removeChild(s),c(t)})(t)})),r.appendChild(d),r.appendChild(a),r.appendChild(s),r.appendChild(l),r.appendChild(m),o.appendChild(r),n.insertBefore(o,n.firstChild)};var s=n(379),l=n.n(s),p=n(795),u=n.n(p),A=n(569),m=n.n(A),h=n(565),f=n.n(h),b=n(216),C=n.n(b),g=n(589),v=n.n(g),y=n(426),L={};L.styleTagTransform=v(),L.setAttributes=f(),L.insert=m().bind(null,"head"),L.domAPI=u(),L.insertStyleElement=C(),l()(y.Z,L),y.Z&&y.Z.locals&&y.Z.locals;let E=new e("title","desc","date","prio"),B=new e("title1","desc","date","prio"),j=new e("title2","desc","date","prio"),I=new e("title3","desc","date","prio"),k=new t("Hello"),w=new class{constructor(){this.projectList=[]}pushProject(e){this.projectList.push(e)}removeProject(e){for(let t=0;t<this.projectList.length;t++)e.name===this.projectList[t].name&&this.projectList.splice(t,1)}},q=new e("title","desc","date","prio"),x=new e("title1","desc","date","prio"),M=new e("title2","desc","date","prio"),S=new e("title3","desc","date","prio"),T=new t("Hello");i(k,E),i(k,B),i(k,j),i(k,I),i(T,q),i(T,x),i(T,M),i(T,S),w.pushProject(k),w.pushProject(T),((e,t)=>{for(let t=0;t<e.todoList.length;t++)"title2"===e.todoList[t].title&&e.todoList.splice(t,1);for(let t=0;t<e.todoList.length;t++)e.todoList[t].id=t})(k),console.log(k.todoList[0]),console.log(k.todoList[1]),console.log(k.todoList[2]),console.log(k.todoList[3]),console.log(w),console.log(w.projectList[0]),(()=>{const e=document.querySelector("body"),t=document.createElement("div");t.setAttribute("id","content");const n=document.createElement("div");n.setAttribute("id","project-holder");const o=document.createElement("div");o.setAttribute("id","todo-holder"),t.appendChild(n),t.appendChild(o),e.appendChild(t)})(),r(w),c(T)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,