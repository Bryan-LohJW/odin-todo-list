(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>a});var o=t(537),r=t.n(o),i=t(645),d=t.n(i)()(r());d.push([e.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ....................................................................... */\n\n:root {\n    \n}\n\n#content {\n    display: grid;\n    grid-template-columns: 400px 1fr;\n\n    padding: 1rem;\n}\n\n#project-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 2rem;\n}\n\n.project {\n    display: flex;\n    justify-content: space-between;\n\n    padding: 0rem 2rem;\n}\n\n.project-name,\n.project-del {\n    font-size: 3rem;\n}\n\n#add-project {\n    text-align: center;\n    font-size: 3rem;\n}\n\n#todo-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 1.5rem;\n}\n\n.todo,\n#add-todo {\n    display: flex;\n    justify-content: space-evenly;\n\n    font-size: 2rem;\n}\n\ninput[type = 'checkbox'] {\n    height: 2rem;\n    width: 2rem;\n}\n\n.background {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n\n    background-color: black;\n    opacity: 0.8;\n}\n\n.add-interface {\n    width:fit-content;\n    height: fit-content;\n\n    background-color: white;\n    padding: 5rem;\n}\n\n.add-interface > form > button {\n    height: 3rem;\n}\n\n.border-black {\n    border: 1px solid black;\n}\n\n.border-blue {\n    border: 1px solid blue;\n}\n\n.border-red {\n    border: 1px solid red;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;AAEA,4EAA4E;;AAE5E;;AAEA;;AAEA;IACI,aAAa;IACb,gCAAgC;;IAEhC,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8BAA8B;;IAE9B,kBAAkB;AACtB;;AAEA;;IAEI,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,WAAW;AACf;;AAEA;;IAEI,aAAa;IACb,6BAA6B;;IAE7B,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,YAAY;IACZ,aAAa;IACb,eAAe;;IAEf,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;;IAEnB,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ....................................................................... */\n\n:root {\n    \n}\n\n#content {\n    display: grid;\n    grid-template-columns: 400px 1fr;\n\n    padding: 1rem;\n}\n\n#project-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 2rem;\n}\n\n.project {\n    display: flex;\n    justify-content: space-between;\n\n    padding: 0rem 2rem;\n}\n\n.project-name,\n.project-del {\n    font-size: 3rem;\n}\n\n#add-project {\n    text-align: center;\n    font-size: 3rem;\n}\n\n#todo-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 1.5rem;\n}\n\n.todo,\n#add-todo {\n    display: flex;\n    justify-content: space-evenly;\n\n    font-size: 2rem;\n}\n\ninput[type = 'checkbox'] {\n    height: 2rem;\n    width: 2rem;\n}\n\n.background {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n\n    background-color: black;\n    opacity: 0.8;\n}\n\n.add-interface {\n    width:fit-content;\n    height: fit-content;\n\n    background-color: white;\n    padding: 5rem;\n}\n\n.add-interface > form > button {\n    height: 3rem;\n}\n\n.border-black {\n    border: 1px solid black;\n}\n\n.border-blue {\n    border: 1px solid blue;\n}\n\n.border-red {\n    border: 1px solid red;\n}"],sourceRoot:""}]);const a=d},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(d[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&d[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),d=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(d).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},d=[],a=0;a<e.length;a++){var c=e[a],s=o.base?c[0]+o.base:c[0],l=i[s]||0,A="".concat(s," ").concat(l);i[s]=l+1;var u=t(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=r(p,o);o.byIndex=a,n.splice(a,0,{identifier:A,updater:m,references:1})}d.push(A)}return d}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var d=0;d<i.length;d++){var a=t(i[d]);n[a].references--}for(var c=o(e,r),s=0;s<i.length;s++){var l=t(i[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=c}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{const e=e=>{const n=document.querySelector("#project-holder"),t=document.createElement("div");t.classList.add("project");const o=document.createElement("h2");o.classList.add("project-name"),o.innerHTML=`${e.name} - (${e.todoList.length})`;const r=document.createElement("div");r.classList.add("project-del"),r.innerHTML="(X)",r.addEventListener("click",(function(){B(e)})),t.appendChild(o),t.appendChild(r),n.appendChild(t),o.addEventListener("click",(function(){E(e)}))},n=e=>{const n=document.querySelector("#todo-holder"),t=document.createElement("div");t.classList.add("todo");const o=document.createElement("input");o.classList.add("check"),o.setAttribute("type","checkbox");const r=document.createElement("p");r.classList.add("title"),r.innerHTML=e.title;const i=document.createElement("p");i.classList.add("description"),i.innerHTML=e.description;const d=document.createElement("p");d.classList.add("date"),d.innerHTML=e.dueDate;const a=document.createElement("p");a.classList.add("priority"),a.innerHTML=e.priority;const c=document.createElement("div");c.classList.add("todo-edit"),c.innerHTML="Edit",c.addEventListener("click",(function(){alert(`${e.title}`)}));const s=e.color;"black"===s?e.classList.add("border-black"):"blue"===s?e.classList.add("border-blue"):"red"===s&&e.classList.add("border-red"),t.appendChild(o),t.appendChild(r),t.appendChild(i),t.appendChild(d),t.appendChild(a),t.appendChild(c),n.appendChild(t)},o=()=>{const e=document.querySelector("#todo-holder"),n=document.createElement("div");n.setAttribute("id","add-todo"),n.innerHTML="(+)",n.addEventListener("click",(function(){r(project)})),e.appendChild(n)},r=e=>{const n=document.querySelector("body"),t=document.createElement("div");t.classList.add("background"),t.addEventListener("click",(function(){n.removeChild(t)}));const o=document.createElement("div");o.setAttribute("onclick","event.stopPropagation()"),o.classList.add("add-interface");const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("placeholder","Title"),r.classList.add("todo-title-input");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("placeholder","Description"),i.classList.add("todo-description-input");const d=document.createElement("input");d.classList.add("todo-date-input"),d.setAttribute("type","date");const a=document.createElement("select"),c=document.createElement("option");c.setAttribute("value","low"),c.innerHTML="Low";const s=document.createElement("option");s.setAttribute("value","medium"),s.innerHTML="Medium";const l=document.createElement("option");l.setAttribute("value","high"),l.innerHTML="High",a.appendChild(c),a.appendChild(s),a.appendChild(l),a.classList.add("todo-priority-input");const A=document.createElement("select"),u=document.createElement("option");u.setAttribute("value","black"),u.innerHTML="Black";const p=document.createElement("option");p.setAttribute("value","blue"),p.innerHTML="Blue";const m=document.createElement("option");m.setAttribute("value","red"),m.innerHTML="Red",A.appendChild(u),A.appendChild(p),A.appendChild(m),A.classList.add("todo-color-input");const h=document.createElement("button");h.setAttribute("type","submit"),h.innerHTML="Add",h.addEventListener("click",(function(){todoSubmit(e)})),o.appendChild(r),o.appendChild(i),o.appendChild(d),o.appendChild(a),o.appendChild(A),o.appendChild(h),t.appendChild(o),n.insertBefore(t,n.firstChild)};let i=[];var d=t(379),a=t.n(d),c=t(795),s=t.n(c),l=t(569),A=t.n(l),u=t(565),p=t.n(u),m=t(216),h=t.n(m),b=t(589),f=t.n(b),C=t(426),v={};v.styleTagTransform=f(),v.setAttributes=p(),v.insert=A().bind(null,"head"),v.domAPI=s(),v.insertStyleElement=h(),a()(C.Z,v),C.Z&&C.Z.locals&&C.Z.locals;let g=0;const y=()=>{(()=>{const e=document.querySelector("#project-holder");for(;e.firstChild;)e.removeChild(e.firstChild)})(),(()=>{for(let e=0;e<i.length;e++)i[e].id=e})();for(let n=0;n<i.length;n++)console.log(i[n]),e(i[n]);(()=>{const e=document.querySelector("#project-holder"),n=document.createElement("div");n.setAttribute("id","add-project"),n.innerHTML="(+)",e.appendChild(n),n.addEventListener("click",(function(){(()=>{const e=document.querySelector("body"),n=document.createElement("div");n.classList.add("background"),n.addEventListener("click",(function(){e.removeChild(n)}));const t=document.createElement("div");t.setAttribute("onclick","event.stopPropagation()"),t.classList.add("add-interface");const o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("placeholder","My New Project"),o.classList.add("project-name");const r=document.createElement("button");r.setAttribute("type","submit"),r.innerHTML="Create",r.addEventListener("click",(function(){projectSubmit()})),t.appendChild(o),t.appendChild(r),n.appendChild(t),e.insertBefore(n,e.firstChild)})()}))})()},E=e=>{(()=>{const e=document.querySelector("#todo-holder");for(;e.firstChild;)e.removeChild(e.firstChild)})();for(let t=0;t<e.todoList.length;t++)n(e.todoList[t]);o(),g=e.id},B=e=>{e.id===g&&E(i[0]),((e,n)=>{n.splice(e.id,1);for(let e=0;e<n.length;e++)n[e].id=e})(e),y()},L=new class{constructor(e,n=[]){this.name=e,this.todoList=n}}("Default");i.push(L),(()=>{const e=document.querySelector("body"),n=document.createElement("div");n.setAttribute("id","content");const t=document.createElement("div");t.setAttribute("id","project-holder");const o=document.createElement("div");o.setAttribute("id","todo-holder"),n.appendChild(t),n.appendChild(o),e.appendChild(n)})(),y(),E(i[0])})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,