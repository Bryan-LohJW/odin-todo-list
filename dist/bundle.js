(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var o=n(537),r=n.n(o),i=n(645),d=n.n(i)()(r());d.push([e.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ....................................................................... */\n\n:root {\n    \n}\n\n#content {\n    display: grid;\n    grid-template-columns: 400px 1fr;\n\n    padding: 1rem;\n}\n\n#project-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 2rem;\n}\n\n.project {\n    display: flex;\n    justify-content: space-between;\n\n    padding: 0rem 2rem;\n}\n\n.project-name,\n.project-del {\n    font-size: 3rem;\n}\n\n#add-project {\n    text-align: center;\n    font-size: 3rem;\n}\n\n#todo-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 1.5rem;\n}\n\n.todo,\n#add-todo {\n    display: flex;\n    justify-content: space-evenly;\n\n    font-size: 2rem;\n}\n\ninput[type = 'checkbox'] {\n    height: 2rem;\n    width: 2rem;\n}\n\n.background {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n\n    background-color: black;\n    opacity: 0.8;\n}\n\n.add-interface {\n    width:fit-content;\n    height: fit-content;\n\n    background-color: white;\n    padding: 5rem;\n}\n\n.add-interface > form > button {\n    height: 3rem;\n}\n\n.border-black {\n    border: 1px solid black;\n}\n\n.border-blue {\n    border: 1px solid blue;\n}\n\n.border-red {\n    border: 1px solid red;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;AAEA,4EAA4E;;AAE5E;;AAEA;;AAEA;IACI,aAAa;IACb,gCAAgC;;IAEhC,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8BAA8B;;IAE9B,kBAAkB;AACtB;;AAEA;;IAEI,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,WAAW;AACf;;AAEA;;IAEI,aAAa;IACb,6BAA6B;;IAE7B,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,YAAY;IACZ,aAAa;IACb,eAAe;;IAEf,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;;IAEnB,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ....................................................................... */\n\n:root {\n    \n}\n\n#content {\n    display: grid;\n    grid-template-columns: 400px 1fr;\n\n    padding: 1rem;\n}\n\n#project-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 2rem;\n}\n\n.project {\n    display: flex;\n    justify-content: space-between;\n\n    padding: 0rem 2rem;\n}\n\n.project-name,\n.project-del {\n    font-size: 3rem;\n}\n\n#add-project {\n    text-align: center;\n    font-size: 3rem;\n}\n\n#todo-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 1.5rem;\n}\n\n.todo,\n#add-todo {\n    display: flex;\n    justify-content: space-evenly;\n\n    font-size: 2rem;\n}\n\ninput[type = 'checkbox'] {\n    height: 2rem;\n    width: 2rem;\n}\n\n.background {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n\n    background-color: black;\n    opacity: 0.8;\n}\n\n.add-interface {\n    width:fit-content;\n    height: fit-content;\n\n    background-color: white;\n    padding: 5rem;\n}\n\n.add-interface > form > button {\n    height: 3rem;\n}\n\n.border-black {\n    border: 1px solid black;\n}\n\n.border-blue {\n    border: 1px solid blue;\n}\n\n.border-red {\n    border: 1px solid red;\n}"],sourceRoot:""}]);const c=d},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(o)for(var c=0;c<this.length;c++){var a=this[c][0];null!=a&&(d[a]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&d[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),d=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(d).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},d=[],c=0;c<e.length;c++){var a=e[c],s=o.base?a[0]+o.base:a[0],l=i[s]||0,p="".concat(s," ").concat(l);i[s]=l+1;var u=n(p),A={css:a[1],media:a[2],sourceMap:a[3],supports:a[4],layer:a[5]};if(-1!==u)t[u].references++,t[u].updater(A);else{var m=r(A,o);o.byIndex=c,t.splice(c,0,{identifier:p,updater:m,references:1})}d.push(p)}return d}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var d=0;d<i.length;d++){var c=n(i[d]);t[c].references--}for(var a=o(e,r),s=0;s<i.length;s++){var l=n(i[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=a}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var o={};(()=>{n.d(o,{d:()=>w});class e{constructor(e,t,n,o,r="black",i=!1){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.color=r,this.check=i}}class t{constructor(e,t=[]){this.name=e,this.todoList=t}}const r=(e,t)=>{t.id=e.todoList.length,e.todoList.push(t)},i=e=>{const t=document.querySelector("#project-holder");for(;t.firstChild;)t.removeChild(t.firstChild);for(let n=0;n<e.projectList.length;n++){const o=document.createElement("div");o.classList.add("project");const r=document.createElement("h2");r.classList.add("project-name"),r.innerHTML=`${e.projectList[n].name} - (${e.projectList[n].todoList.length})`;const c=document.createElement("div");c.classList.add("project-del"),c.innerHTML="(X)",c.addEventListener("click",(function(){e.projectList.splice(n,1),i(e),d(e.projectList[0])})),o.appendChild(r),o.appendChild(c),t.appendChild(o),r.addEventListener("click",(function(){d(e.projectList[n])}))}const n=document.createElement("div");n.setAttribute("id","add-project"),n.innerHTML="(+)",t.appendChild(n),n.addEventListener("click",(function(){c()}))},d=e=>{const t=document.querySelector("#todo-holder");for(;t.firstChild;)t.removeChild(t.firstChild);for(let n=0;n<e.todoList.length;n++){const o=document.createElement("div");o.classList.add("todo");const r=document.createElement("input");r.classList.add("check"),r.setAttribute("type","checkbox");const i=document.createElement("p");i.classList.add("title"),i.innerHTML=e.todoList[n].title;const d=document.createElement("p");d.classList.add("description"),d.innerHTML=e.todoList[n].description;const c=document.createElement("p");c.classList.add("date"),c.innerHTML=e.todoList[n].dueDate;const a=document.createElement("p");a.classList.add("priority"),a.innerHTML=e.todoList[n].priority;const s=document.createElement("div");s.classList.add("todo-edit"),s.innerHTML="Edit",s.addEventListener("click",(function(){alert(`${e.todoList[n].title}`)}));const l=e.todoList[n].color;"black"===l?o.classList.add("border-black"):"blue"===l?o.classList.add("border-blue"):"red"===l&&o.classList.add("border-red"),o.appendChild(r),o.appendChild(i),o.appendChild(d),o.appendChild(c),o.appendChild(a),o.appendChild(s),t.appendChild(o)}const n=document.createElement("div");n.setAttribute("id","add-todo"),n.innerHTML="(+)",n.addEventListener("click",(function(){a(e)})),t.appendChild(n)},c=()=>{const e=document.querySelector("body"),n=document.createElement("div");n.classList.add("background"),n.addEventListener("click",(function(){e.removeChild(n)}));const o=document.createElement("div");o.setAttribute("onclick","event.stopPropagation()"),o.classList.add("add-interface");const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("placeholder","My New Project"),r.classList.add("project-name");const d=document.createElement("button");d.setAttribute("type","submit"),d.innerHTML="Create",d.addEventListener("click",(function(){(e=>{const n=document.querySelector(".project-name").value,o=new t(n);e.pushProject(o);const r=document.querySelector(".background");document.querySelector("body").removeChild(r),i(e)})(w)})),o.appendChild(r),o.appendChild(d),n.appendChild(o),e.insertBefore(n,e.firstChild)},a=t=>{const n=document.querySelector("body"),o=document.createElement("div");o.classList.add("background"),o.addEventListener("click",(function(){n.removeChild(o)}));const c=document.createElement("div");c.setAttribute("onclick","event.stopPropagation()"),c.classList.add("add-interface");const a=document.createElement("input");a.setAttribute("type","text"),a.setAttribute("placeholder","Title"),a.classList.add("todo-title-input");const s=document.createElement("input");s.setAttribute("type","text"),s.setAttribute("placeholder","Description"),s.classList.add("todo-description-input");const l=document.createElement("input");l.classList.add("todo-date-input"),l.setAttribute("type","date");const p=document.createElement("select"),u=document.createElement("option");u.setAttribute("value","low"),u.innerHTML="Low";const A=document.createElement("option");A.setAttribute("value","medium"),A.innerHTML="Medium";const m=document.createElement("option");m.setAttribute("value","high"),m.innerHTML="High",p.appendChild(u),p.appendChild(A),p.appendChild(m),p.classList.add("todo-priority-input");const h=document.createElement("select"),b=document.createElement("option");b.setAttribute("value","black"),b.innerHTML="Black";const f=document.createElement("option");f.setAttribute("value","blue"),f.innerHTML="Blue";const C=document.createElement("option");C.setAttribute("value","red"),C.innerHTML="Red",h.appendChild(b),h.appendChild(f),h.appendChild(C),h.classList.add("todo-color-input");const v=document.createElement("button");v.setAttribute("type","submit"),v.innerHTML="Add",v.addEventListener("click",(function(){((t,n)=>{const o=document.querySelector(".todo-title-input").value,c=document.querySelector(".todo-description-input").value,a=document.querySelector(".todo-date-input").value,s=document.querySelector(".todo-priority-input").value,l=document.querySelector(".todo-color-input").value;console.log(l);const p=new e(o,c,a,s,l);r(t,p);const u=document.querySelector(".background");document.querySelector("body").removeChild(u),d(t),i(n)})(t,w)})),c.appendChild(a),c.appendChild(s),c.appendChild(l),c.appendChild(p),c.appendChild(h),c.appendChild(v),o.appendChild(c),n.insertBefore(o,n.firstChild)};var s=n(379),l=n.n(s),p=n(795),u=n.n(p),A=n(569),m=n.n(A),h=n(565),b=n.n(h),f=n(216),C=n.n(f),v=n(589),g=n.n(v),y=n(426),L={};L.styleTagTransform=g(),L.setAttributes=b(),L.insert=m().bind(null,"head"),L.domAPI=u(),L.insertStyleElement=C(),l()(y.Z,L),y.Z&&y.Z.locals&&y.Z.locals;let E=new e("title","desc","date","prio"),B=new e("title1","desc","date","prio"),k=new e("title2","desc","date","prio"),I=new e("title3","desc","date","prio"),j=new t("Hello"),w=new class{constructor(){this.projectList=[]}pushProject(e){this.projectList.push(e)}removeProject(e){for(let t=0;t<this.projectList.length;t++)e.name===this.projectList[t].name&&this.projectList.splice(t,1)}},x=new e("title","desc","date","prio"),q=new e("title1","desc","date","prio"),T=new e("title2","desc","date","prio"),M=new e("title3","desc","date","prio"),S=new t("Hello");r(j,E),r(j,B),r(j,k),r(j,I),r(S,x),r(S,q),r(S,T),r(S,M),w.pushProject(j),w.pushProject(S),((e,t)=>{for(let t=0;t<e.todoList.length;t++)"title2"===e.todoList[t].title&&e.todoList.splice(t,1);for(let t=0;t<e.todoList.length;t++)e.todoList[t].id=t})(j),console.log(j.todoList[0]),console.log(j.todoList[1]),console.log(j.todoList[2]),console.log(j.todoList[3]),console.log(w),console.log(w.projectList[0]),(()=>{const e=document.querySelector("body"),t=document.createElement("div");t.setAttribute("id","content");const n=document.createElement("div");n.setAttribute("id","project-holder");const o=document.createElement("div");o.setAttribute("id","todo-holder"),t.appendChild(n),t.appendChild(o),e.appendChild(t)})(),i(w),d(S)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,