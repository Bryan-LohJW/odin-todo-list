(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>d});var o=n(537),r=n.n(o),i=n(645),c=n.n(i)()(r());c.push([e.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ....................................................................... */\n\n:root {\n    \n}\n\n#content {\n    display: grid;\n    grid-template-columns: 400px 1fr;\n\n    padding: 1rem;\n}\n\n#project-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 2rem;\n}\n\n.project {\n    display: flex;\n    justify-content: space-between;\n\n    padding: 0rem 2rem;\n}\n\n.project-name,\n.project-del {\n    font-size: 3rem;\n}\n\n#add-project {\n    text-align: center;\n    font-size: 3rem;\n}\n\n#todo-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 1.5rem;\n}\n\n.todo,\n#add-todo {\n    display: flex;\n    justify-content: space-evenly;\n\n    font-size: 2rem;\n}\n\n.checkedTodo {\n    background-color: gray;\n}\n\ninput[type = 'checkbox'] {\n    height: 2rem;\n    width: 2rem;\n}\n\n.background {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n\n    background-color: black;\n    opacity: 0.8;\n}\n\n.add-interface {\n    width:fit-content;\n    height: fit-content;\n\n    background-color: white;\n    padding: 5rem;\n}\n\n.add-interface > form > button {\n    height: 3rem;\n}\n\n.border-black {\n    border: 1px solid black;\n}\n\n.border-blue {\n    border: 1px solid blue;\n}\n\n.border-red {\n    border: 1px solid red;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;AAEA,4EAA4E;;AAE5E;;AAEA;;AAEA;IACI,aAAa;IACb,gCAAgC;;IAEhC,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8BAA8B;;IAE9B,kBAAkB;AACtB;;AAEA;;IAEI,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,WAAW;AACf;;AAEA;;IAEI,aAAa;IACb,6BAA6B;;IAE7B,eAAe;AACnB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;IAEnB,YAAY;IACZ,aAAa;IACb,eAAe;;IAEf,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;;IAEnB,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n/* ....................................................................... */\n\n:root {\n    \n}\n\n#content {\n    display: grid;\n    grid-template-columns: 400px 1fr;\n\n    padding: 1rem;\n}\n\n#project-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 2rem;\n}\n\n.project {\n    display: flex;\n    justify-content: space-between;\n\n    padding: 0rem 2rem;\n}\n\n.project-name,\n.project-del {\n    font-size: 3rem;\n}\n\n#add-project {\n    text-align: center;\n    font-size: 3rem;\n}\n\n#todo-holder {\n    display: grid;\n    grid-auto-rows: min-content;\n    gap: 1.5rem;\n}\n\n.todo,\n#add-todo {\n    display: flex;\n    justify-content: space-evenly;\n\n    font-size: 2rem;\n}\n\n.checkedTodo {\n    background-color: gray;\n}\n\ninput[type = 'checkbox'] {\n    height: 2rem;\n    width: 2rem;\n}\n\n.background {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 100vw;\n    height: 100vh;\n    position: fixed;\n\n    background-color: black;\n    opacity: 0.8;\n}\n\n.add-interface {\n    width:fit-content;\n    height: fit-content;\n\n    background-color: white;\n    padding: 5rem;\n}\n\n.add-interface > form > button {\n    height: 3rem;\n}\n\n.border-black {\n    border: 1px solid black;\n}\n\n.border-blue {\n    border: 1px solid blue;\n}\n\n.border-red {\n    border: 1px solid red;\n}"],sourceRoot:""}]);const d=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var d=0;d<this.length;d++){var a=this[d][0];null!=a&&(c[a]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&c[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),c=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(c).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},c=[],d=0;d<e.length;d++){var a=e[d],s=o.base?a[0]+o.base:a[0],l=i[s]||0,u="".concat(s," ").concat(l);i[s]=l+1;var A=n(u),p={css:a[1],media:a[2],sourceMap:a[3],supports:a[4],layer:a[5]};if(-1!==A)t[A].references++,t[A].updater(p);else{var m=r(p,o);o.byIndex=d,t.splice(d,0,{identifier:u,updater:m,references:1})}c.push(u)}return c}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<i.length;c++){var d=n(i[c]);t[d].references--}for(var a=o(e,r),s=0;s<i.length;s++){var l=n(i[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=a}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{let e=[],t=0;class o{constructor(e,t,n,o,r="black",i=!1){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.color=r,this.check=i}}class r{constructor(e,t=[]){this.name=e,this.todoList=t}}const i=e=>{const t=document.querySelector("#project-holder"),n=document.createElement("div");n.classList.add("project");const o=document.createElement("h2");o.classList.add("project-name"),o.innerHTML=`${e.name} - (${e.todoList.length})`;const r=document.createElement("div");r.classList.add("project-del"),r.innerHTML="(X)",r.addEventListener("click",(function(){I(e)})),n.appendChild(o),n.appendChild(r),t.appendChild(n),o.addEventListener("click",(function(){k(e)}))},c=e=>{const t=document.querySelector("#todo-holder"),n=document.createElement("div");n.classList.add("todo");const o=document.createElement("input");o.classList.add("check"),o.setAttribute("type","checkbox"),d(o,n,e),e.check&&(n.classList.add("checkedTodo"),o.setAttribute("checked",""));const r=document.createElement("p");r.classList.add("title"),r.innerHTML=e.title;const i=document.createElement("p");i.classList.add("description"),i.innerHTML=e.description;const c=document.createElement("p");c.classList.add("date"),c.innerHTML=e.dueDate;const a=document.createElement("p");a.classList.add("priority"),a.innerHTML=e.priority;const s=document.createElement("div");s.classList.add("todo-edit"),s.innerHTML="Edit",s.addEventListener("click",(function(){E()}));const l=e.color;"black"===l?n.classList.add("border-black"):"blue"===l?n.classList.add("border-blue"):"red"===l&&n.classList.add("border-red"),n.appendChild(o),n.appendChild(r),n.appendChild(i),n.appendChild(c),n.appendChild(a),n.appendChild(s),t.appendChild(n)},d=(n,o,r)=>{n.addEventListener("change",(function(){o.classList.toggle("checkedTodo"),e[t].todoList[r.id].check?e[t].todoList[r.id].check=!1:e[t].todoList[r.id].check=!0,E()}))};var a=n(379),s=n.n(a),l=n(795),u=n.n(l),A=n(569),p=n.n(A),m=n(565),h=n.n(m),b=n(216),f=n.n(b),C=n(589),g=n.n(C),v=n(426),y={};y.styleTagTransform=g(),y.setAttributes=h(),y.insert=p().bind(null,"head"),y.domAPI=u(),y.insertStyleElement=f(),s()(v.Z,y),v.Z&&v.Z.locals&&v.Z.locals;let E=()=>{const t=JSON.stringify(e);localStorage.setItem("projectList",t)},L=()=>{const e=JSON.stringify(t);localStorage.setItem("currentProjectId",e)};const B=()=>{(()=>{const e=document.querySelector("#project-holder");for(;e.firstChild;)e.removeChild(e.firstChild)})(),(()=>{for(let t=0;t<e.length;t++)e[t].id=t})();for(let t=0;t<e.length;t++)i(e[t]);(()=>{const t=document.querySelector("#project-holder"),n=document.createElement("div");n.setAttribute("id","add-project"),n.innerHTML="(+)",t.appendChild(n),n.addEventListener("click",(function(){(()=>{const t=document.querySelector("body"),n=document.createElement("div");n.classList.add("background"),n.addEventListener("click",(function(){t.removeChild(n)}));const o=document.createElement("div");o.setAttribute("onclick","event.stopPropagation()"),o.classList.add("add-interface");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("placeholder","My New Project"),i.classList.add("project-name");const c=document.createElement("button");c.setAttribute("type","submit"),c.innerHTML="Create",c.addEventListener("click",(function(){(()=>{const t=document.querySelector(".project-name").value,n=new r(t);e.push(n);const o=document.querySelector(".background");document.querySelector("body").removeChild(o),B(),E()})()})),o.appendChild(i),o.appendChild(c),n.appendChild(o),t.insertBefore(n,t.firstChild)})()}))})()},k=n=>{(()=>{const e=document.querySelector("#todo-holder");for(;e.firstChild;)e.removeChild(e.firstChild)})();for(let e=0;e<n.todoList.length;e++)c(n.todoList[e]);(()=>{const n=document.querySelector("#todo-holder"),r=document.createElement("div");r.setAttribute("id","add-todo"),r.innerHTML="(+)",r.addEventListener("click",(function(){(e=>{const t=document.querySelector("body"),n=document.createElement("div");n.classList.add("background"),n.addEventListener("click",(function(){t.removeChild(n)}));const r=document.createElement("div");r.setAttribute("onclick","event.stopPropagation()"),r.classList.add("add-interface");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("placeholder","Title"),i.classList.add("todo-title-input");const c=document.createElement("input");c.setAttribute("type","text"),c.setAttribute("placeholder","Description"),c.classList.add("todo-description-input");const d=document.createElement("input");d.classList.add("todo-date-input"),d.setAttribute("type","date");const a=document.createElement("select"),s=document.createElement("option");s.setAttribute("value","low"),s.innerHTML="Low";const l=document.createElement("option");l.setAttribute("value","medium"),l.innerHTML="Medium";const u=document.createElement("option");u.setAttribute("value","high"),u.innerHTML="High",a.appendChild(s),a.appendChild(l),a.appendChild(u),a.classList.add("todo-priority-input");const A=document.createElement("select"),p=document.createElement("option");p.setAttribute("value","black"),p.innerHTML="Black";const m=document.createElement("option");m.setAttribute("value","blue"),m.innerHTML="Blue";const h=document.createElement("option");h.setAttribute("value","red"),h.innerHTML="Red",A.appendChild(p),A.appendChild(m),A.appendChild(h),A.classList.add("todo-color-input");const b=document.createElement("button");b.setAttribute("type","submit"),b.innerHTML="Add",b.addEventListener("click",(function(){(e=>{const t=document.querySelector(".todo-title-input").value,n=document.querySelector(".todo-description-input").value,r=document.querySelector(".todo-date-input").value,i=document.querySelector(".todo-priority-input").value,c=document.querySelector(".todo-color-input").value,d=new o(t,n,r,i,c);d.id=e.todoList.length,e.todoList.push(d);const a=document.querySelector(".background");document.querySelector("body").removeChild(a),k(e),B(),E()})(e)})),r.appendChild(i),r.appendChild(c),r.appendChild(d),r.appendChild(a),r.appendChild(A),r.appendChild(b),n.appendChild(r),t.insertBefore(n,t.firstChild)})(e[t])})),n.appendChild(r)})(),t=n.id,L()},I=n=>{const o=n.id;(t=>{e.splice(t.id,1);for(let t=0;t<e.length;t++)e[t].id=t})(n),o===t&&(k(e[0]),t=0,L()),B(),E()};(()=>{if(null===localStorage.getItem("firstTime")){localStorage.setItem("firstTime","notFirstTime");const t=new Project("Default");e.push(t)}else e=(()=>{const e=localStorage.getItem("projectList");return JSON.parse(e)})(),t=(()=>{const e=localStorage.getItem("currentProjectId");return JSON.parse(e)})(),(()=>{const e=document.querySelector("body"),t=document.createElement("div");t.setAttribute("id","content");const n=document.createElement("div");n.setAttribute("id","project-holder");const o=document.createElement("div");o.setAttribute("id","todo-holder"),t.appendChild(n),t.appendChild(o),e.appendChild(t)})(),B(),k(e[t])})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,